from PIL import Image
from skimage.io import imread,imshow,show
import scipy.fftpack as fp
from scipy import ndimage,misc,signal
from skimage import data,img_as_float
from skimage.color import rgb2gray
from skimage.transform import rescale
import matplotlib.pylab as pylab
import numpy as np
import numpy.fft
import timeit
im= Image.open("images/cgvr.png")
pylab.imshow(im),pylab.show()
 
upSampling
#nearest neighbor iterpolation
im1= im.resize((im.width*5, im.height*5),Image.NEAREST)
pylab.figure(figsize=(10,10)),pylab.imshow(im1),pylab.show()
 
im1=im.resize((im.width*5,im.height*5),Image.BILINEAR)
pylab.figure(figsize=(10,10)),pylab.imshow(im1),pylab.show()

 
(<Figure size 1000x1000 with 1 Axes>,
 <matplotlib.image.AxesImage at 0x19623c16610>,
 None)


im.resize((im.width*10,im.height*10),Image.BICUBIC).show()
pylab.figure(figsize=(10,10)),pylab.imshow(im1),pylab.show()
 


im=Image.open("images/Pythonds.jpg")
im.show()
pylab.imshow(im),pylab.show()
 
im=Image.open("images/Pythonds.jpg")
im=im.resize((im.width//5,im.height//5))
pylab.figure(figsize=(15,10)),pylab.imshow(im),pylab.show()
 
im=im.resize((im.width//5,im.height//5), Image.ANTIALIAS)
pylab.figure(figsize=(15,10)),pylab.imshow(im),pylab.show()
 
im=  imread("images/rajesh.png")
im1=im.copy()
pylab.figure(figsize=(20,15))
for i in range(4):
    pylab.subplot(2,2,i+1),pylab.imshow(im1,cmap='gray'),pylab.axis('off')
    pylab.title('image size=' + str(im1.shape[1])+ 'x' + str(im1.shape[0]))
    im1= rescale(im1,scale=0.5,multichannel=True,anti_aliasing=False)
pylab.subplots_adjust(wspace=0.1,hspace=0.1)
pylab.show
 
im= Image.open('images/rajesh.png')
def signaltonoise(a,axis=0,ddof=0):
    a=np.asanyarray(a)
    m=a.mean(axis)
    sd=a.std(axis=axis,ddof=ddof)
    return np.where(sd== 0,0,m/sd)
pylab.figure(figsize=(15,20))
num_colors_list=[1<< n for n in range(8,0,-1)]
snr_list =[]
i=1
for num_colors in num_colors_list:
    im1=im.convert('P',palette=Image.ADAPTIVE,colors=num_colors)
    pylab.subplot(4,2,i),pylab.imshow(im1),pylab.axis('off')
    snr_list.append(signaltonoise(im1, axis= None))
    pylab.title('Image with # colors ='+ str(num_colors) +'SNR ='+ str (np.round(snr_list[i-1],3)),size=20)
    i+=1
    pylab .subplots_adjust(wspace=0.2,hspace=0)
    pylab.show()
     
pylab.plot(num_colors_list,snr_list, 'r.-')
pylab.xlabel("# colors in image")
pylab.ylabel('SNR')
pylab.title('Change in SNR w.r.t # colors')
pylab.xscale('log', base=2)
pylab.gca().invert_xaxis()
pylab.show()
 
im=np.array(Image.open('images/elephant.jpg').convert('L'))
snr=signaltonoise(im,axis=None)
print('SNR for the original image=' + str(snr))
freq=fp.fft2(im)
im1=fp.ifft2(freq).real
snr=signaltonoise(im1,axis=None)
print('SNR for the image obtained after reconstruction =' +str(snr))
assert(np.allclose(im,im1))
pylab.figure(figsize=(20,10))
pylab.subplot(121),pylab.imshow(im,cmap='gray'),pylab.axis('off')
pylab.title('Original Image', size=20)
pylab.subplot(122),pylab.imshow(im1,cmap='gray'),pylab.axis('off')
pylab.title('Image obtained after reconstruction', size=20)
pylab.show()

 

freq2= fp.fftshift(freq)
pylab.figure(figsize=(10,10)),pylab.imshow((20*np.log10(0.1+freq2)).astype(int)),pylab.show
 




import numpy.fft as fp
im1 =rgb2gray(imread('images/elephant.jpg'))
pylab.figure(figsize=(12,10))
freq1=fp.fft2(im1)
im1_=fp.ifft2(freq1).real
pylab.subplot(2,2,1),pylab.imshow(im1,cmap='gray'),pylab.title('Original Image',size=20)
pylab.subplot(2,2,2),pylab.imshow(20*np.log10(0.01 + np.abs(fp.fftshift(freq1))),cmap='gray'),pylab.title('FFT SPECTRUM MAGNITUDE',size=20)
pylab.subplot(2,2,3),pylab.imshow(np.angle(fp.fftshift(freq1)),cmap='gray'),pylab.title('FFT PHASE',size=20)
pylab.subplot(2,2,4),pylab.imshow(np.clip(im1_,0,255),cmap='gray'),pylab.title('Reconstructed Image',size=20)
pylab.show()


img2=rgb2gray(imread('images/aditya.png'))
pylab.figure(figsize=(12,10))
freq2=fp.fft2(im2)
im2_=fp.ifft2(fre2).real
pylab.subplot(2,2,1),pylab.imshow(im2,cmap='gray'),pylab.title('Original Image',size=20)
pylab.subplot(2,2,2),pylab.imshow(20*np.log10(0.01 + np.abs(fp.fftshift(freq1))),cmap='gray'),pylab.title('FFT SPECTRUM MAGNITUDE',size=20)
pylab.subplot(2,2,3),pylab.imshow(np.angle(fp.fftshift(freq1)),cmap='gray'),pylab.title('FFT PHASE',size=20)
pylab.subplot(2,2,4),pylab.imshow(np.clip(im2_,0,255),cmap='gray'),pylab.title('Reconstructed Image',size=20)
pylab.show()
 










